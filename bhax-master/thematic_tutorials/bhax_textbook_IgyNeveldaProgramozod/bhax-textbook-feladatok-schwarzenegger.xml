<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Schwarzenegger!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Szoftmax Py MNIST</title>
        <para>
            Python
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/j7f9SkJR3oc">https://youtu.be/j7f9SkJR3oc</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://github.com/tensorflow/tensorflow/releases/tag/v0.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v0.9.0</link> (/tensorflow-0.9.0/tensorflow/examples/tutorials/mnist/), <link xlink:href="https://progpater.blog.hu/2016/11/13/hello_samu_a_tensorflow-bol">https://progpater.blog.hu/2016/11/13/hello_samu_a_tensorflow-bol</link>  
        </para>
        <para>
            A feladat megoldásához használom a tensorflow nevű alkalmazást. Ennek az aplikációnak a használatát megtalálhatjuk az alkalmazás weboldalán.
			Amit tudni kell a tensorflowról:
        </para>
		        <para>Ez egy open source platform, amely a gépi tanulás világába kalauzolja el a programozót.
        </para>
		 <para>Ezen a platformon rengeteg eszköz áll rendelkezésünkre, hogy megértsük a gépi tanulást, és érdekes projekteket tudjunk létrehozni.
		 
</para>
 <para>Felhő alapú
</para>
 <para>Most, hogy ezeket tisztáztuk, térjünk rá, hogy mit is csinál a programunk
</para>
<programlisting language="c++">
<![CDATA[
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(128, activation='relu'),
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10)
])

]]>
        </programlisting>
		 <para>A megfelelő könyvtárak importálása után az adatokat  teszt adaszerkezetekbe töltjük fel. Külön töltjök be a traint és külön a testet. Ezek után jöhet is a neurális háló elkészitése, ennek segitségével tanitjukfel az adatokat.
		 A tensorflow itt is sok segitséget nyújt, jelen esetben a beépitett modelleket használjuk fel. Itt adjuk meg az input méretét, ami jelen esetben 28x28. Látható még a köztes réteg megadása is, amit pár neuron eltávolitása követ, ezzel elkerülve a túlillesztést.
		 Végül megadjuk a kimenetet is, és hogy ez hány elemű lesz.
</para>
<programlisting language="c++">
<![CDATA[

predictions = model(x_train[:1]).numpy()
predictions

tf.nn.softmax(predictions).numpy()

loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)

loss_fn(y_train[:1], predictions).numpy()


]]>
        </programlisting>
		
<para> Predikciókra is szükségünk lesz, ezeket a train adatbázison kell használnunk. Ezek a predikciók fognak a neurális háló kimeneteként szolgálni.
A softmax ezek átkonvertálására szolgál, igy lesznek osztályok. A loss függvényt is létrehozzuk, ebben is segit a tensorflow. Ez a függvény a neurális háló kimenete alapján fog működni.
</para>

<programlisting language="c++">
<![CDATA[

model.compile(optimizer='adam',
              loss=loss_fn,
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=5)

model.evaluate(x_test,  y_test, verbose=2)

probability_model = tf.keras.Sequential([
  model,
  tf.keras.layers.Softmax()
])

probability_model(x_test[:5])


]]>
        </programlisting>
		 <para>Végül létrehozzuk a modelleket, a compile segitségével. Ezt a loss és az optimizer paraméterezi, és egy metrikát is alkalmazunk.
		 A tanitás elinditását a model.fit-el tudjuk elinditani, itt meg kell adnunk hogy hány epochost fusson a tanitás, ezek utánmár futtathatjuk is a programot.
Minél nagyobb az epochost annál több ideig tart a tanulás, de annál pontosabb is lesz a végeredmény.</para>
    </section>        

<!--
    <section>
        <title>Szoftmax R MNIST</title>
        <para>
            R            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        
-->
    
    <section>
        <title>Mély MNIST</title>
        <para>
            Python            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása: https://github.com/Amsekal/Bhax/blob/master/bhax-master/thematic_tutorials/bhax_textbook_IgyNeveldaProgramozod/mnist_cnn.py               
        </para>
        <para>
            Az előzőhöz hasonlóan itt is egy neurális háló létrehozása a cél. Itt azonban futtatáskor eredményt is fogunk kapni.
			Bemeneti paraméterként megadhatunk egy képet amin egy szám szerepel, és a ő képes lesz eldönteni, hogy milyen számjegy található a bemeneti képen.
			Továbbra is igaz, hogy minél több időt adunk tanulni a gépnek, annál pontosabb lesz.
        </para>
    </section>        
<!--
    <section>
        <title>Deep dream</title>
        <para>
            Keras            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        
-->                  
    <section>
        <title>Minecraft-MALMÖ és 8.4 Vörös Pipacs pokol/javits a 19 RF-en</title>
        <para>
        </para>
        <para>
			
            Megoldás videó: <link xlink:href="https://youtu.be/bAPSu3Rndi8">https://youtu.be/bAPSu3Rndi8</link>      
       Megoldás videó 8.4: <link xlink:href=" https://youtu.be/BxKswdRrUns"> https://youtu.be/BxKswdRrUns</link>  </para>
        <para>
            Megoldás forrása: https://github.com/Amsekal/Bhax/blob/master/smartsteve.py               
        </para>
        <para>
            Minden fejezethez tartozott egy malmős feladat, ezek forrását  a https://github.com/Amsekal/Bhax repóban lehet megtalálni.
        A Malmü projekt segitségével bárki betekintést nyerhet a mesterséges inteligencia világába, ezen belül is annak programozásába. A projekt kretein belül a Minecraft segitségévl készithetünk egy mesterséges inteligenciát.
		A Magas szitnű programozási nyelvek 1 tantárgy segitségével mi is kipróbálhattuk magunkat, és egy versenysorozaton összemérhettük tudásunkat és szerencsénket is. A verseny célja egy olyan MI megirása volt, amely képes a tölcsérszerű pályán
		Pipacsokat összeszedni, még mielőtt elérné a fentről folyó láva.</para>
		 <para>

</para>
		  <para>Ennek a projektnek köszönhetően rengeteget tanultam az ágensek irásáról és működéséről. Érdekes és sok gondolkodást igénylő feladatok elé állitott, amiket többnyire meg is tudtam oldani, még ha néha csak segitséggel is. Biztos vagyok benne hogy a
		  jövőben is hasznát fogom venni annak a tudásnak amire itt tettem szert, habár a mesterséges inteligencia jelenleg még csak szárnyait bontogatja.
		  A projekt nagy tömegeket tud megszólitani, mert az emberek nagy részét érdekli az MI de egy mégnagyobb része szereti a Minecraftot, és örül, ha valami érdekeset kreálhat benne. Nagyon sokan állitják, hogy a Minecraft mint játék fejleszti a kreativitást,
		  ha ehez hozzávesszük a Malmöt, akkor ez a kijelentés biztosan igaz. Örülök, hogy a programozás, és az ágensek irása már nem csak a nagyok kiváltsága, hanem próbálják elérhetővé tenni minden érdeklődő számára.
		  Én jól szórakoztam az ágensek irásával, és szerintem ez egy olyan lehetőség, amit nem szabad kihagyni.
</para>
    </section>        

</chapter>                
