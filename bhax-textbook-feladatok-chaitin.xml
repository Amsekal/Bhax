<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Chaitin!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Iteratív és rekurzív faktoriális Lisp-ben</title>
        <para>
                
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/z6NJE2a1zIA">https://youtu.be/z6NJE2a1zIA</link>, Futtatás:<link xlink:href="https://youtu.be/E_3xkGiiOJ4 ">https://youtu.be/E_3xkGiiOJ4 </link>   https://youtu.be/E_3xkGiiOJ4   
        </para>
        <para>
            Megoldás forrása:    <link xlink:href="https://github.com/Amsekal/Bhax/blob/master/bhax-master/thematic_tutorials/bhax_textbook_IgyNeveldaProgramozod/fact.lisp">fact.lisp</link>            
        </para>

<para>Ebben a programban egy szám faktoriálisát számoljuk ki lispben. Mielőtt azonban rátérnénk a programra ejtsünk pár szót a lispről.
</para>      
<para>A Lisp egy programozási nyelvcsalád, amit manapság már csak kevesen használnak. Ez egy általános programozási nyelv, de használható mesterséges inteligencia programozásában is. Most azonban egy általános program megirására használjuk.
</para>      
<para>A nyelv listák egymásba ágyazásával működik. Szintaktikája egyszerű, a műveleti jelek a számok/változók előtt szerepelnek. Most, hogy megismertük a nyelvet, nézzük a programot.
</para>      
<programlisting language="c"><![CDATA[ #!/usr/bin/clisp

(defun factorial_iterative (n)
	(let ((f 1))
		(dotimes (i n)
		(setf f (* f (+ i 1))))
		f
	)
)
]]></programlisting> 
<para>Az első sor arra utal, hogy a clisp-et akarjuk használni, tehát először ezt szükséges is telepitenünk. A defun létrehoz számunkra egy függvényt, amit factorial_iterative-nak nevezünk el és adunk neki egy n paramétert. A következő sorban létrehozunk egy f változót, aminek a kezdő értéke 1 lesz. Ezek után láthatjuk a dotimes-t ami a lisp-ben egy for ciklushoz hasonló utasitás. A dotimes-ban végezzük el a szorzásokat, számoljuk a faktoriálist.
</para>  
<programlisting language="c"><![CDATA[ 
(defun factorial_recursive (n)
  (if (= n 0)
      1
      (* n (factorial_recursive (- n 1))) ) )
]]></programlisting> 
<para>Hasonlóan az előző sorokhoz, itt is létrehozunk egy függvényt, azonban itt egy rekurziv megadással érjük el, hogy a programunk számoljon.
</para>  
<programlisting language="c"><![CDATA[ (format t "Recursive:~%")

(loop for i from 0 to 20
	do (format t "~D! = ~D~%" i (factorial_recursive i)) )
]]></programlisting> 
<para>Itt található a factorial_recursive függvényt meghivjuk 20-ra, tehát kiszámoljuk a 20!-t. a format utasitással pedig kiiratunk egy üzenetet.
</para>  
<programlisting language="c"><![CDATA[ (format t "Iterative:~%")

(loop for i from 0 to 20
	do (format t "~D! = ~D~%" i (factorial_iterative i)) )
]]></programlisting> 
<para>Hasonlóan az előző meghiváshoz, itt meghivjuk a factorial_iterative függvényt, szintúgy 20-ra.
</para>  
<para>A program nem bonyolult, a nehézséget a programozási nyelv megismerése jelenti, azonban az egyszerű szintaktikája miatt ez sem teljesithetetlen.
</para>   
    </section>        
<!--        
    <section>
        <title>Weizenbaum Eliza programja</title>
        <para>
            Éleszd fel Weizenbaum Eliza programját!
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
    </section>        
-->
    <section>
        <title>Gimp Scheme Script-fu: króm effekt</title>
        <para>
            Írj olyan script-fu kiterjesztést a GIMP programhoz, amely megvalósítja a króm effektet egy 
            bemenő szövegre!
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/OKdAkI_c7Sc">https://youtu.be/OKdAkI_c7Sc</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Chrome">https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Chrome</link>               
        </para>
        <para>
            Kezdésként tisztázzuk mi is az a Gimp. A Gimp egy kép szerkesztő/manipuláló applikáció, melyben rétegeket is létrehozhatunk, hogy a kép jobban szerkeszthető legyen.
        </para>   

<para>A Gimp egy másik különlegessége, hogy feladatok elvégzésére irhatunk szkripteket. Ezek a szkriptek a Script-fu nyelven iródnak, ami a Lisp nyelvcsaládjába tartozik, igy szintaktikája is nagyban hasonlit az első feladatban megirt programéhoz.
</para>   
<para>A feladat lényege, hogy a beirt szöveget krómozott effektel lássuk el, és ezt egy szkriptel érjük el.
</para>  

<programlisting language="c"><![CDATA[ (define (color-curve)
    (let* (
        (tomb (cons-array 8 'byte))
    )
        (aset tomb 0 0)
        (aset tomb 1 0)
        (aset tomb 2 50)
        (aset tomb 3 190)
        (aset tomb 4 110)
        (aset tomb 5 20)
        (aset tomb 6 200)
        (aset tomb 7 190)
    tomb)    
)
]]></programlisting> 
<para>Szükségünk lesz egy color-curve függvényre, ahol egy tömbbe beirjuk azokat a számokat, amelyek szükségesek lesznek a krómozáshoz.
</para>  
<programlisting language="c"><![CDATA[ (define (elem x lista)

    (if (= x 1) (car lista) (elem (- x 1) ( cdr lista ) ) )

)

(define (text-wh text font fontsize)
(let*
    (
        (text-width 1)
        (text-height 1)
    )
 
    (set! text-width (car (gimp-text-get-extents-fontname text fontsize PIXELS font)))    
    (set! text-height (elem 2  (gimp-text-get-extents-fontname text fontsize PIXELS font)))    
    
    (list text-width text-height)
    )
)
]]></programlisting> 



<para>Itt két függvényt is létrehozunk, az elsővel a betű helyzetét nézzük a szövegben, mig a másodikkal a szöveg dimenzióit alakitjuk.
</para> 


<programlisting language="c"><![CDATA[ 
(define (script-fu-bhax-chrome text font fontsize width height color gradient)
(let*
    (
        (image (car (gimp-image-new width height 0)))
        (layer (car (gimp-layer-new image width height RGB-IMAGE "bg" 100 LAYER-MODE-NORMAL-LEGACY)))
        (textfs)
        (text-width (car (text-wh text font fontsize)))
        (text-height (elem 2 (text-wh text font fontsize)))
        (layer2)        
    )
    
]]></programlisting> 


<para>Létrehozzuk a script-fu szkriptünket is, e nélkül ugyanis nem tudnánk elérni célunkat. Itt hozzuk létre az összes dolgot, amire a szkriptnek szüksége lehet,szöveg magasság, szélesség, layerek stb. Ezek után következik pár lépés:
</para> 


<programlisting language="c"><![CDATA[     (gimp-image-insert-layer image layer 0 0)
    (gimp-context-set-foreground '(0 0 0))
    (gimp-drawable-fill layer  FILL-FOREGROUND )
    (gimp-context-set-foreground '(255 255 255))
   
    (set! textfs (car (gimp-text-layer-new image text font fontsize PIXELS)))
    (gimp-image-insert-layer image textfs 0 0)   
    (gimp-layer-set-offsets textfs (- (/ width 2) (/ text-width 2)) (- (/ height 2) (/ text-height 2)))
   
    (set! layer (car(gimp-image-merge-down image textfs CLIP-TO-BOTTOM-LAYER)))
]]></programlisting> 


<para>Először adunk egy réteget a képünkhöz, a betű szineit fehérre, mig a hátteret  feketére állitjuk.
</para> 



<programlisting language="c"><![CDATA[     (plug-in-gauss-iir RUN-INTERACTIVE image layer 15 TRUE TRUE)
]]></programlisting> 


<para>Itt egy már megirt plugint használunk, ami elmosódás látszatát kelti majda képen.
</para> 



<programlisting language="c"><![CDATA[  (gimp-drawable-levels layer HISTOGRAM-VALUE .11 .42 TRUE 1 0 1 TRUE)
]]></programlisting> 


<para>Itt a kép frekvenciáját állitjuk be.
</para> 



<programlisting language="c"><![CDATA[ (plug-in-gauss-iir RUN-INTERACTIVE image layer 2 TRUE TRUE)
]]></programlisting> 


<para>Újra használunk elmosódást, most kisebb értékkel.
</para> 

<programlisting language="c"><![CDATA[     (gimp-image-select-color image CHANNEL-OP-REPLACE layer '(0 0 0))
    (gimp-selection-invert image)
]]></programlisting> 


<para>A fekete szint elválasztjuk, majd invertáljuk a szelektálást.
</para> 

<programlisting language="c"><![CDATA[     (set! layer2 (car (gimp-layer-new image width height RGB-IMAGE "2" 100 LAYER-MODE-NORMAL-LEGACY)))
    (gimp-image-insert-layer image layer2 0 0)
]]></programlisting> 




<programlisting language="c"><![CDATA[ 	(gimp-context-set-gradient gradient) 
	(gimp-edit-blend layer2 BLEND-CUSTOM LAYER-MODE-NORMAL-LEGACY GRADIENT-LINEAR 100 0 REPEAT-NONE 
        FALSE TRUE 5 .1 TRUE width (/ height 3) width  (- height (/ height 3)))
]]></programlisting> 

<programlisting language="c"><![CDATA[   (plug-in-bump-map RUN-NONINTERACTIVE image layer2 layer 120 25 7 5 5 0 0 TRUE FALSE 2)
]]></programlisting> 



<programlisting language="c"><![CDATA[     (gimp-curves-spline layer2 HISTOGRAM-VALUE 8 (color-curve))
      
    (gimp-display-new image)
    (gimp-image-clean-all image)
    )
)
]]></programlisting> 

<para>A többi lépés is azt a célt szolgálja, hogy a képen elérjük a választott effektet
</para> 

<programlisting language="c"><![CDATA[ (script-fu-register "script-fu-bhax-chrome"
    "Chrome3"
    "Creates a chrome effect on a given text."
    "Norbert Bátfai"
    "Copyright 2019, Norbert Bátfai"
    "January 19, 2019"
    ""
    SF-STRING       "Text"      "Bátf41 Haxor"
    SF-FONT         "Font"      "Sans"
    SF-ADJUSTMENT   "Font size" '(100 1 1000 1 10 0 1)
    SF-VALUE        "Width"     "1000"
    SF-VALUE        "Height"    "1000"
    SF-COLOR        "Color"     '(255 0 0)
    SF-GRADIENT     "Gradient"  "Crown molding"    
)
(script-fu-menu-register "script-fu-bhax-chrome" 
    "<Image>/File/Create/BHAX"
)
]]></programlisting> 

<para>Végül regisztrálnunk kell a szkriptet, hogy használni tudjuk.
</para> 

        <figure>
            <title>Krómozás</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="GIMP.png" scale="100" />
                </imageobject>
                <textobject>
                    <phrase>Az <type>én</type> eredményem</phrase>
                </textobject>
            </mediaobject>
        </figure> 
    </section>        

    <section>
        <title>Gimp Scheme Script-fu: név mandala</title>
        <para>
            Írj olyan script-fu kiterjesztést a GIMP programhoz, amely név-mandalát készít a
            bemenő szövegből!               
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://bhaxor.blog.hu/2019/01/10/a_gimp_lisp_hackelese_a_scheme_programozasi_nyelv">https://bhaxor.blog.hu/2019/01/10/a_gimp_lisp_hackelese_a_scheme_programozasi_nyelv</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Mandala">https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Mandala</link>               
        </para>
        <para>
            I RFH verseny-ből nyert passzomat felhasználom.
        </para>            
    </section>        

<!--    
    <section>
        <title>Lambda</title>
        <para>
            Hasonlítsd össze a következő programokat!
        </para>
        <para>
            Megoldás videó: <link xlink:href=""></link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href=""></link>               
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>            
    </section>        
-->    

<!--
    <section>
        <title>Omega</title>
        <para>
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
    </section>        

</chapter>                
